# 1) 매 홀수자리의 숫자마다 2를 곱해서 더합니다. 
# 2) 매 짝수자리의 숫자는 그대로 더합니다.
# 3) 1)과 2)를 더 한 숫자에 N을 더 한 숫자가 10으로 나눴을 때 나눠 떨어지면 유효한 숫자입니다. 

# 첫 번째 줄에 테스트 케이스의 수 T가 주어진다.
# 각 테스트 케이스는 한 개의 줄로 이루어지며, 각 줄에는 공백으로 구분한 자연수 15개가 주어진다. 

# 각 테스트 케이스마다, 룬 공식 유효성 검사를 통과하기 위해 16번째 자리에 들어갸아하는 숫자를 찾아서 출력한다.

T = int(input())

for t in range(1, T+1):
    case = list(map(int, input().split()))
    
    hol_hap = 0
    zzac_hap = 0    

    for c in range(len(case)):
        # 홀수 자리인 경우
        if (c+1) % 2 == 1:
            hol_hap += case[c] * 2
        # 짝수 자리인 경우
        elif (c+1) % 2 == 0:
            zzac_hap += case[c]

    # 홀짝 합 전부 더해서 10 나누기 해서 나머지를 / 10에서 뺀 값을 N으로 임명합니다.
    # 그러나 그 값이 10인 경우에는 0

    N = 0
    if 10 - (hol_hap + zzac_hap) % 10 == 10:
        N == 0
    else:
        N = 10 - (hol_hap + zzac_hap) % 10

    # 출력한다.
    print(f'#{t} {N}')